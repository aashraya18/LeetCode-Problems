******QUESTION********
Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL
Follow up:

A linked list can be reversed either iteratively or recursively. Could you implement both?
***********************
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        if not head:
            return head
        prev = None
        curr = head
        next1 = head.next
        while next1:
            curr.next = prev
            prev = curr
            curr = next1
            next1 = next1.next
        curr.next = prev
        prev = curr
        curr = next1
        return prev
