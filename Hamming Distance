**********QUESTION**********
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.
********************************
class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        z = x^y
        l = []
        count = 0
        while z!=0:
            l.append(z%2)
            z = z // 2
        if len(l)==1:
            return 1
        for i in range(len(l)):
            if l[i]==1:
                count += 1
        return count
