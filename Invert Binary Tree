******QUESTION**********
Invert a binary tree.

Example:

Input:

     4
   /   \
  2     7
 / \   / \
1   3 6   9
Output:

     4
   /   \
  7     2
 / \   / \
9   6 3   1
************************
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        que = [root]
        while que:
            k = len(que)
            for i in range(k):
                a = que.pop(0)
                if not a:
                    continue
                if a.left or a.right:
                    t = a.left
                    a.left = a.right
                    a.right = t
                if a.left:
                    que.append(a.left)
                if a.right:
                    que.append(a.right)
        return root
